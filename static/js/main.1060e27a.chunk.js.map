{"version":3,"sources":["components/AddTaskForm.js","lib/helpers.js","components/Task.js","components/TaskList.js","components/Sorter.js","components/Count.js","App.js","index.js"],"names":["AddTaskForm","props","useState","value","setValue","className","onSubmit","event","preventDefault","label","trim","task","id","uuidv4","createdAt","Date","isComplete","priority","createTask","addTask","name","onChange","target","placeholder","maxLength","data-testid","autoFocus","Task","getPriorityClassName","setPriority","role","tabIndex","onClick","toggleComplete","color","icon","faCheckSquare","faSquare","size","onDelete","faTrashAlt","TaskList","tasks","map","Sorter","setSortBy","sortBy","getSortByClassName","Count","numTasks","length","numCompletedTasks","filter","t","App","state","setState","prevState","deleteTask","tasksExist","Object","keys","this","tasksObject","values","sort","a","b","getSortedTasksAsArray","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uXA8CeA,G,MAzCK,SAACC,GAAW,IAAD,EACHC,mBAAS,IADN,mBACtBC,EADsB,KACfC,EADe,KAkB7B,OACE,qBAAKC,UAAU,cAAf,SACE,sBAAMC,SAbW,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAQN,EAAMO,OAEpB,GAAID,EAAO,CACT,IAAME,ECXc,SAACF,GAAD,MAAY,CACpCG,GAAIC,cACJJ,QACAK,UAAW,IAAIC,KACfC,YAAY,EACZC,SAR6B,GDcZC,CAAWT,GACxBR,EAAMkB,QAAQR,GACdP,EAAS,MAMqBC,UAAU,oBAAxC,SACE,uBACEe,KAAK,QACLf,UAAU,qBACVF,MAAOA,EACPkB,SAtBS,SAACd,GAChBH,EAASG,EAAMe,OAAOnB,QAsBhBoB,YAAY,sDACZC,UAAU,KACVC,cAAY,iBAEZC,WAAS,U,cEoEJC,G,MA/FF,SAAC1B,GACZ,IAQM2B,EAAuB,SAACX,GAC5B,IAAIZ,EAAY,iBAMhB,OAJIJ,EAAMgB,WAAaA,IACrBZ,GAAa,6BAGRA,GAGHwB,EAAc,SAACZ,GAAD,OAAc,WAChChB,EAAM4B,YAAY5B,EAAMW,GAAIK,KAG9B,OACE,sBAAKZ,UAAU,OAAf,UACE,sBACEyB,KAAK,SACLC,SAAU,EACV1B,UAAU,iBACV2B,QA5BiB,WACrB/B,EAAMgC,eAAehC,EAAMW,KAuBzB,SAME,cAAC,IAAD,CACEsB,MAAOjC,EAAMe,WAAa,UAAY,OACtCmB,KAAMlC,EAAMe,WAAaoB,IAAgBC,IACzCC,KAAK,SAIT,sBAAMjC,UAAU,cAAhB,SACGJ,EAAMQ,QAGT,sBACEqB,KAAK,SACLC,SAAU,EACV1B,UAAWuB,EDnDS,GCoDpBI,QAASH,EDpDW,GCgDtB,iBASA,sBACEC,KAAK,SACLC,SAAU,EACV1B,UAAWuB,ED3DY,GC4DvBI,QAASH,ED5Dc,GCwDzB,iBASA,sBACEC,KAAK,SACLC,SAAU,EACV1B,UAAWuB,EDnEU,GCoErBI,QAASH,EDpEY,GCgEvB,kBASA,sBACEC,KAAK,SACLC,SAAU,EACV1B,UAAU,eACV2B,QApEe,WACnB/B,EAAMsC,SAAStC,EAAMW,KAoEjBa,cAAA,sBAA4BxB,EAAMW,IALpC,SAOE,cAAC,IAAD,CACEuB,KAAMK,IACNF,KAAK,cC5CAG,G,MArCE,SAACxC,GAAD,OACf,qBAAKI,UAAU,WAAf,SACE,oBAAIA,UAAU,iBAAd,SACGJ,EAAMyC,MAAMC,KAAI,SAAChC,GAAD,OACf,oBACEN,UAAU,iBAEVoB,cAAY,YAHd,SAKE,cAAC,EAAD,CACEb,GAAID,EAAKC,GACTH,MAAOE,EAAKF,MACZO,WAAYL,EAAKK,WACjBC,SAAUN,EAAKM,SACfgB,eAAgBhC,EAAMgC,eACtBM,SAAUtC,EAAMsC,SAChBV,YAAa5B,EAAM4B,eAVhBlB,EAAKC,aCwDLgC,G,MA9DA,SAAC3C,GACd,IAAM4C,EAAY,SAACC,GAAD,OAAY,WAC5B7C,EAAM4C,UAAUC,KAGZC,EAAqB,SAACD,GAC1B,IAAIzC,EAAY,iBAMhB,OAJIJ,EAAM6C,SAAWA,IACnBzC,GAAa,6BAGRA,GAGT,OACE,sBAAKA,UAAU,SAAf,UACE,sBAAMA,UAAU,cAAhB,SACE,sBAAMA,UAAU,gBAAhB,uBAGF,sBAAMA,UAAU,cAAhB,SACE,sBACEyB,KAAK,SACLC,SAAU,EACVC,QAASa,EAAU,QACnBxC,UAAW0C,EAAmB,QAJhC,uBAUF,sBAAM1C,UAAU,cAAhB,SACE,sBACEyB,KAAK,SACLC,SAAU,EACVC,QAASa,EAAU,YACnBxC,UAAW0C,EAAmB,YAJhC,wBAUF,sBAAM1C,UAAU,cAAhB,SACE,sBACEyB,KAAK,SACLC,SAAU,EACVC,QAASa,EAAU,QACnBxC,UAAW0C,EAAmB,QAJhC,yBChBOC,G,MA7BD,SAAC/C,GACb,IAAMgD,EAAWhD,EAAMyC,MAAMQ,OACvBC,EAAoBlD,EAAMyC,MAAMU,QAAO,SAACC,GAAD,OAAOA,EAAErC,cAAYkC,OAElE,OACE,sBAAK7C,UAAU,QAAf,UACE,gCACE,sBAAMA,UAAU,aAAhB,SAA8B8C,IAE9B,sBAAM9C,UAAU,YAAhB,eAEA,sBAAMA,UAAU,aAAhB,SAA8B4C,OAGhC,qBAAK5C,UAAU,eAAf,2BC6ESiD,G,kNAtFbC,MAAQ,CACNb,MAAO,GACPI,OAAQ,Q,EAGVD,UAAY,SAACC,GACX,EAAKU,SAAS,CAAEV,Y,EAGlB3B,QAAU,SAACR,GACT,EAAK6C,UAAS,SAACC,GAAD,MAAgB,CAC5Bf,MAAM,2BACDe,EAAUf,OADV,kBAEF/B,EAAKC,GAAKD,S,EAKjBsB,eAAiB,SAACrB,GAChB,IAAMD,EAAI,eAAQ,EAAK4C,MAAMb,MAAM9B,IACnCD,EAAKK,YAAcL,EAAKK,WACxB,EAAKG,QAAQR,I,EAGfkB,YAAc,SAACjB,EAAIK,GACjB,IAAMN,EAAI,eAAQ,EAAK4C,MAAMb,MAAM9B,IACnCD,EAAKM,SAAWA,EAChB,EAAKE,QAAQR,I,EAGf+C,WAAa,SAAC9C,GAAQ,IACT8B,EADQ,iBACE,EAAKa,MAAMb,cACzBA,EAAM9B,GACb,EAAK4C,SAAS,CAAEd,W,uDAIhB,IAAIA,EAAQ,KACNiB,IAAeC,OAAOC,KAAKC,KAAKP,MAAMb,OAAOQ,OAMnD,OAJIS,IACFjB,ELpC+B,SAACqB,EAAajB,GACjD,IAAMJ,EAAQkB,OAAOI,OAAOD,GAE5B,OAAQjB,GACN,IAAK,WACHJ,EAAMuB,MAAK,SAACC,EAAGC,GACb,OAAID,EAAEjD,WAAakD,EAAElD,SACZiD,EAAEjD,SAAWkD,EAAElD,UAAY,EAAI,EAGjCiD,EAAEpD,UAAYqD,EAAErD,WAAa,EAAI,KAE1C,MAGF,IAAK,OACH4B,EAAMuB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzD,MAAQ0D,EAAE1D,OAAS,EAAI,KAC/C,MAGF,QACEiC,EAAMuB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEpD,UAAYqD,EAAErD,WAAa,EAAI,KAI3D,OAAO4B,EKWK0B,CAAsBN,KAAKP,MAAMb,MAAOoB,KAAKP,MAAMT,SAI3D,sBAAKzC,UAAU,MAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,oBAAIA,UAAU,eAAd,4BAGF,uBAAMA,UAAU,YAAhB,UACE,cAAC,EAAD,CAAac,QAAS2C,KAAK3C,WAEzBwC,GACA,qBAAKtD,UAAU,oBAAf,+CAGDsD,GACC,qCACE,sBAAKtD,UAAU,YAAf,UACE,cAAC,EAAD,CACEyC,OAAQgB,KAAKP,MAAMT,OACnBD,UAAWiB,KAAKjB,YAGlB,cAAC,EAAD,CAAOH,MAAOA,OAGhB,cAAC,EAAD,CACEA,MAAOA,EACPT,eAAgB6B,KAAK7B,eACrBM,SAAUuB,KAAKJ,WACf7B,YAAaiC,KAAKjC,oBAM1B,wBAAQxB,UAAU,cAAlB,4C,GA/EUgE,cCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1060e27a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createTask } from '../lib/helpers';\nimport './AddTaskForm.css';\n\nconst AddTaskForm = (props) => {\n  const [value, setValue] = useState('');\n\n  const onChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    const label = value.trim();\n\n    if (label) {\n      const task = createTask(label);\n      props.addTask(task);\n      setValue('');\n    }\n  };\n\n  return (\n    <div className=\"AddTaskForm\">\n      <form onSubmit={onFormSubmit} className=\"AddTaskForm__form\">\n        <input\n          name=\"label\"\n          className=\"AddTaskForm__input\"\n          value={value}\n          onChange={onChange}\n          placeholder=\"Type here to add a new task, hit enter when done...\"\n          maxLength=\"75\"\n          data-testid=\"new-task-label\"\n          // eslint-disable-next-line jsx-a11y/no-autofocus\n          autoFocus\n        />\n      </form>\n    </div>\n  );\n};\n\nAddTaskForm.propTypes = {\n  addTask: PropTypes.func.isRequired,\n};\n\nexport default AddTaskForm;\n","import { v4 as uuidv4 } from 'uuid';\n\nexport const PRIORITY_LOW = 1;\nexport const PRIORITY_NORMAL = 2;\nexport const PRIORITY_HIGH = 3;\n\nexport const createTask = (label) => ({\n  id: uuidv4(),\n  label,\n  createdAt: new Date(),\n  isComplete: false,\n  priority: PRIORITY_NORMAL,\n});\n\nexport const getSortedTasksAsArray = (tasksObject, sortBy) => {\n  const tasks = Object.values(tasksObject);\n\n  switch (sortBy) {\n    case 'priority': {\n      tasks.sort((a, b) => {\n        if (a.priority !== b.priority) {\n          return a.priority > b.priority ? -1 : 1;\n        }\n\n        return a.createdAt > b.createdAt ? -1 : 1;\n      });\n      break;\n    }\n\n    case 'name': {\n      tasks.sort((a, b) => (a.label > b.label ? -1 : 1));\n      break;\n    }\n\n    default: { // Sort by date\n      tasks.sort((a, b) => (a.createdAt > b.createdAt ? -1 : 1));\n    }\n  }\n\n  return tasks;\n};\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare, faSquare, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { PRIORITY_LOW, PRIORITY_NORMAL, PRIORITY_HIGH } from '../lib/helpers';\nimport './Task.css';\n\nconst Task = (props) => {\n  const toggleComplete = () => {\n    props.toggleComplete(props.id);\n  };\n\n  const handleDelete = () => {\n    props.onDelete(props.id);\n  };\n\n  const getPriorityClassName = (priority) => {\n    let className = 'Task__priority';\n\n    if (props.priority === priority) {\n      className += ' Task__priority--selected';\n    }\n\n    return className;\n  };\n\n  const setPriority = (priority) => () => {\n    props.setPriority(props.id, priority);\n  };\n\n  return (\n    <div className=\"Task\">\n      <span\n        role=\"button\"\n        tabIndex={0}\n        className=\"Task__complete\"\n        onClick={toggleComplete}\n      >\n        <FontAwesomeIcon\n          color={props.isComplete ? '#006400' : '#999'}\n          icon={props.isComplete ? faCheckSquare : faSquare}\n          size=\"lg\"\n        />\n      </span>\n\n      <span className=\"Task__label\">\n        {props.label}\n      </span>\n\n      <span\n        role=\"button\"\n        tabIndex={0}\n        className={getPriorityClassName(PRIORITY_LOW)}\n        onClick={setPriority(PRIORITY_LOW)}\n      >\n        low\n      </span>\n\n      <span\n        role=\"button\"\n        tabIndex={0}\n        className={getPriorityClassName(PRIORITY_NORMAL)}\n        onClick={setPriority(PRIORITY_NORMAL)}\n      >\n        med\n      </span>\n\n      <span\n        role=\"button\"\n        tabIndex={0}\n        className={getPriorityClassName(PRIORITY_HIGH)}\n        onClick={setPriority(PRIORITY_HIGH)}\n      >\n        high\n      </span>\n\n      <span\n        role=\"button\"\n        tabIndex={0}\n        className=\"Task__delete\"\n        onClick={handleDelete}\n        data-testid={`delete-task-${props.id}`}\n      >\n        <FontAwesomeIcon\n          icon={faTrashAlt}\n          size=\"lg\"\n        />\n      </span>\n    </div>\n  );\n};\n\nTask.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  toggleComplete: PropTypes.func.isRequired,\n  setPriority: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  priority: PropTypes.number.isRequired,\n  isComplete: PropTypes.bool.isRequired,\n};\n\nexport default Task;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Task from './Task';\nimport './TaskList.css';\n\nconst TaskList = (props) => (\n  <div className=\"TaskList\">\n    <ul className=\"TaskList__list\">\n      {props.tasks.map((task) => (\n        <li\n          className=\"TaskList__item\"\n          key={task.id}\n          data-testid=\"task-item\"\n        >\n          <Task\n            id={task.id}\n            label={task.label}\n            isComplete={task.isComplete}\n            priority={task.priority}\n            toggleComplete={props.toggleComplete}\n            onDelete={props.onDelete}\n            setPriority={props.setPriority}\n          />\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nTaskList.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  toggleComplete: PropTypes.func.isRequired,\n  setPriority: PropTypes.func.isRequired,\n  tasks: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    createdAt: PropTypes.instanceOf(Date).isRequired,\n    isComplete: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    priority: PropTypes.number.isRequired,\n  })).isRequired,\n};\n\nexport default TaskList;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport './Sorter.css';\n\nconst Sorter = (props) => {\n  const setSortBy = (sortBy) => () => {\n    props.setSortBy(sortBy);\n  };\n\n  const getSortByClassName = (sortBy) => {\n    let className = 'Sorter__sortBy';\n\n    if (props.sortBy === sortBy) {\n      className += ' Sorter__sortBy--selected';\n    }\n\n    return className;\n  };\n\n  return (\n    <div className=\"Sorter\">\n      <span className=\"Sorter__col\">\n        <span className=\"Sorter__label\">Sort by</span>\n      </span>\n\n      <span className=\"Sorter__col\">\n        <span\n          role=\"button\"\n          tabIndex={0}\n          onClick={setSortBy('date')}\n          className={getSortByClassName('date')}\n        >\n          Created\n        </span>\n      </span>\n\n      <span className=\"Sorter__col\">\n        <span\n          role=\"button\"\n          tabIndex={0}\n          onClick={setSortBy('priority')}\n          className={getSortByClassName('priority')}\n        >\n          Priority\n        </span>\n      </span>\n\n      <span className=\"Sorter__col\">\n        <span\n          role=\"button\"\n          tabIndex={0}\n          onClick={setSortBy('name')}\n          className={getSortByClassName('name')}\n        >\n          Name\n        </span>\n      </span>\n    </div>\n  );\n};\n\nSorter.propTypes = {\n  sortBy: PropTypes.string.isRequired,\n  setSortBy: PropTypes.func.isRequired,\n};\n\nexport default Sorter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Count.css';\n\nconst Count = (props) => {\n  const numTasks = props.tasks.length;\n  const numCompletedTasks = props.tasks.filter((t) => t.isComplete).length;\n\n  return (\n    <div className=\"Count\">\n      <div>\n        <span className=\"Count__num\">{numCompletedTasks}</span>\n\n        <span className=\"Count__of\">/</span>\n\n        <span className=\"Count__num\">{numTasks}</span>\n      </div>\n\n      <div className=\"Count__label\">complete</div>\n    </div>\n  );\n};\n\nCount.propTypes = {\n  tasks: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    createdAt: PropTypes.instanceOf(Date).isRequired,\n    isComplete: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    priority: PropTypes.number.isRequired,\n  })).isRequired,\n};\n\nexport default Count;\n","import React, { Component } from 'react';\nimport AddTaskForm from './components/AddTaskForm';\nimport TaskList from './components/TaskList';\nimport Sorter from './components/Sorter';\nimport Count from './components/Count';\nimport { getSortedTasksAsArray } from './lib/helpers';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    tasks: {},\n    sortBy: 'date',\n  };\n\n  setSortBy = (sortBy) => {\n    this.setState({ sortBy });\n  };\n\n  addTask = (task) => {\n    this.setState((prevState) => ({\n      tasks: {\n        ...prevState.tasks,\n        [task.id]: task,\n      },\n    }));\n  };\n\n  toggleComplete = (id) => {\n    const task = { ...this.state.tasks[id] };\n    task.isComplete = !task.isComplete;\n    this.addTask(task);\n  };\n\n  setPriority = (id, priority) => {\n    const task = { ...this.state.tasks[id] };\n    task.priority = priority;\n    this.addTask(task);\n  };\n\n  deleteTask = (id) => {\n    const { ...tasks } = this.state.tasks;\n    delete tasks[id];\n    this.setState({ tasks });\n  };\n\n  render() {\n    let tasks = null;\n    const tasksExist = !!Object.keys(this.state.tasks).length;\n\n    if (tasksExist) {\n      tasks = getSortedTasksAsArray(this.state.tasks, this.state.sortBy);\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__heading\">Things to do</h1>\n        </header>\n\n        <main className=\"App__main\">\n          <AddTaskForm addTask={this.addTask} />\n\n          {!tasksExist && (\n            <div className=\"App__emptyMessage\">You currently have nothing to do!</div>\n          )}\n\n          {tasksExist && (\n            <>\n              <div className=\"App__meta\">\n                <Sorter\n                  sortBy={this.state.sortBy}\n                  setSortBy={this.setSortBy}\n                />\n\n                <Count tasks={tasks} />\n              </div>\n\n              <TaskList\n                tasks={tasks}\n                toggleComplete={this.toggleComplete}\n                onDelete={this.deleteTask}\n                setPriority={this.setPriority}\n              />\n            </>\n          )}\n        </main>\n\n        <footer className=\"App__footer\">\n          Do the things &copy; 2020\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}